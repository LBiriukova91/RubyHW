p "1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными."
p a = [1, 2, 4, 5, 2, 1, 6, 11]
p a.select.with_index { |_, index| index.even? } + a.select.with_index { |_, index| index.odd? }
p ''
p "2. Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными."
p a = [1, 2, 4, 5, 2, 1, 6, 11]
p a.select.with_index { |_, index| index.odd? } + a.select.with_index { |_, index| index.even? }
p ''
p "3. Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p a = [1, 5, 6, 2, 3, 4]
p a.index(a.select { |num| a[0] < num && num < a[-1] }.first) || []
p ''
p "4. Дан целочисленный массив. Вывести номер последнего из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p a = [1, 5, 6, 2, 3, 4]
p a.index(a.select { |num| a[0] < num && num < a[-1] }.last) || []
p ''
p '5. Дан целочисленный массив. Необходимо найти количество элементов, расположенных после последнего максимального.'
p a = [1,6,4,5,7,8,23,1,4]
p a.reverse.index(a.max)
p ''
p '6. Дан целочисленный массив. Необходимо найти количество элементов, расположенных после последнего минимального.'
p a = [1,4,5,7,8,1,4]
p a.reverse.index(a.min)
p ''
p '7. Дан целочисленный массив. Найти индекс минимального элемента.'
p a = [3, 4, 1, 5]
p a.index(a.min)
p ''
p '8. Дан целочисленный массив. Найти индекс максимального элемента.'
p a = [3, 4, 1, 5]
p a.index(a.max)
p ''
p '9. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.'
p a = [1, 2, 4, 6, 7, 0, -5, -3]
p a.push(a.shift)
p ''
p '10. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.'
p a = [1, 2, 4, 6, 7, 0, -5, -3]
p a.push(a.unshift)
p ''
p '11. Дан целочисленный массив. Найти количество элементов между первым и последним минимальным.'
p m = [1,0,0,1,0,0,1]
p a = m.index(m.min)
p b = m.rindex(m.min)
p m[a+1...b]
p ''
p '12. Дан целочисленный массив. Найти количество элементов между первым и последним максимальным.'
p m = [1,0,0,1,0,0,1]
p a = m.index(m.max)
p b = m.rindex(m.max)
p m[a+1...b]
p ''
p '13. Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале.'
p m = [1,2,3,4,5,6,7,1]
p m[a..b].max
p ''
p '14. Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале.'
p m = [1,2,3,4,5,6,7,1]
p m[a..b].min
p ''
p '15. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность.'
p maccuB = [1, 2, 3, 5, 4, 2, 3, 4]
p (0...maccuB.size).sort_by{ |i| maccuB[i] }.reverse
p ''
p '16. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность.'
p maccuB = [1, 2, 3, 5, 4, 2, 3, 4]
p a = Array.new(10){ rand 20 }
p ''
p '17. Дан целочисленный массив. Найти два наименьших элемента.'
p m = [1, 3, 3, 8]
m = m.uniq
m = m.sort
p m.shift
p m.shift
p ''
p '18. Дан целочисленный массив. Найти два наибольших элемента.'
p m = [1, 3, 3, 8]
m=m.sort.uniq
p m.pop
p m.pop
p ''
p '19. Дан целочисленный массив. Заменить все положительные элементы на значение минимального.'
p m = [1, 3, 3, 8]
min = m.min
a = []
m.each { |e| a << (e > 0 ? min : e) }
puts a.to_s
p ''
p '20. Дан целочисленный массив. Заменить все положительные элементы на значение максимального.'
p m = [1, 3, 3, 8]
max = m.max
a = []
m.each { |e| a << (e > 0 ? max : e) }
puts a.to_s
p ''
p '21. Дан целочисленный массив. Найти минимальный четный элемент'
p a = [1, 2, 3, 4, 5]
p a.select{ |i| i.even? }.min
p ''
p '22. Дан целочисленный массив. Найти максимальный четный элемент'
p a = [1, 2, 3, 4, 5]
p a.select{ |i| i.even? }.max
p ''
p '23. Дан целочисленный массив. Найти количество минимальных элементов.'
p m = [1, 2, 3, 4, 5]
p m.select{ |x| x == m.min }.size
p ''
p '24. Дан целочисленный массив. Найти количество максимальных элементов.'
p m = [1, 2, 5, 4, 5]
p m.select{ |x| x == m.max }.size
p ''
p '25. Дан целочисленный массив. Найти максимальный нечетный элемент.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.select{ |i| i.odd? }.max
p ''
p '26. Дан целочисленный массив. Найти минимальный нечетный элемент.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.select{ |i| i.odd? }.min
p ''
p '27. Дан целочисленный массив. Найти минимальный положительный элемент.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.select{|i| i>=0}.min
p ''
p '28. Дан целочисленный массив Найти максимальный из его локальных максимумов'
def maxima(arr)
  arr.each_cons(3).each_with_object([]) do |three, memo|
    memo << three[1] if three[1] > three.first && three[1] > three.last
  end
end
arr = (1..20).to_a.shuffle
p arr
p maxima(arr).max
p ''
p '29. Дан целочисленный массив. Найти минимальный из его локальных минимумов.'
def minimum(arr)
  arr.each_cons(3).each_with_object([]) do |three, memo|
    memo << three[1] if three[1] > three.first && three[1] > three.last
  end
end
arr = (1..20).to_a.shuffle
p arr
p minimum(arr).min
p ''
p '30. Дан целочисленный массив. Найти количество четных элементов.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.count{ |i| i.even? }
p ''
p '31. Дан целочисленный массив. Найти количество нечетных элементов.'
p a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
p a.count{ |i| i.odd? }
p ''
p '32. Дан целочисленный массив. Найти все нечетные элементы.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.select{ |i| i.odd? }
p ''
p '33. Дан целочисленный массив. Найти все четные элементы.'
p a = [1, 2, 3, 4, 5, 6, 7, 8]
p a.select{ |i| i.even? }
p ''
p '34. Дан целочисленный массив. Вывести индексы элементов, которые меньше своего левого соседа, и количество таких чисел.'
p a = [5, 4, 1, 3, 2, 7, 0, 1, 7]
p temp = (1...a.size).select{ |x| a[x] < a[x-1] }
p temp, temp.size
p ''
p '35. Дан целочисленный массив. Найти среднее арифметическое модулей его элементов.'
p a = [1, 2, 3, 4, 5]
p (a.inject(0){ |sum, i| sum + i.abs }.to_f) / a.size
p ''
p '36. Дан целочисленный массив. Найти количество его локальных максимумов.'
p a = [1,2,3,2,3,4,2,4,6,7]
p( (1..a.size-2).to_a.select{ |i| (a[i] > a[i-1])&&(a[i] > a[i+1]) }.size )
p ''
p '37. Дан целочисленный массив. Проверить, чередуются ли в нем положительные и отрицательные числа.'
p a = [1,-2,3,-4,4,2,4,6]
(0..a.size - 1).all? { |i| (a[0] < 0) ? (i.even? ? a[i] < 0 : a[i] >= 0 ) : (i.even? ? a[i] >= 0 : a[i] < 0) }
p ''
p '38. Дано число А и натуральное число N. Найти результат следующего выражения 1 + А + А*2 + А*3 + … + А*N.'
A,N = 10,15
p (1..N).inject(1){ |s,i| s+A*i }
p ''
